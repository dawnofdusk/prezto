# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
# Customized by:
#   Jesse Lin

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/base16-ocean.dark.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

# variables
export EDITOR='vim'
export VISUAL='vim'
export PAGER='vimpager'
export TERM='rxvt-unicode'

# bindings
bindkey -M vicmd 'K' run-help

# aliases
alias sudo='sudo '
alias pacman='pacnanny'
alias syu='trap "sudo umount /boot" EXIT SIGINT SIGTERM ; sudo mount /boot && sudo pacnanny -Syu && sudo umount /boot'
alias syua='trap "sudo umount /boot" EXIT SIGINT SIGTERM ; sudo mount /boot && pacaur -Syua && sudo umount /boot'
alias echol='echo ~/Downloads/$(ls -c ~/Downloads 2>/dev/null | head -1)'
alias rtach='dtach -a /tmp/dtach'
alias cal='cal -3'

# urxvt window hooks
    # Write some info to terminal title.
    # This is seen when the shell prompts for input.
    function _titleprecmd {
      print -Pn "\e]0;zsh%L %(1j,%j job%(2j|s|); ,)%~\a"
    }
    # Write command and args to terminal title.
    # This is seen while the shell waits for a command to complete.
    function _titlepreexec {
      printf "\033]0;%s\a" "$1"
    }
add-zsh-hook precmd _titleprecmd
add-zsh-hook preexec _titlepreexec

# functions
function pp {
    # remember output, prevent different clipboard contents
    # after choosing to execute
    script=$(xclip -o)
    cat -A <<< $script
    printf "\nExecute? (y/n): "
    read execute
    # only execute when 'y' was answered
    # all other input is ignored
    if [[ "$execute" == "y" ]]; then
        eval "$script"
    fi
}
# cf - fuzzy cd from anywhere
# ex: cf word1 word2 ... (even part of a file name)
# zsh autoload function
cf() {
  local file

  file="$(locate -Ai -0 $@ | grep -z -vE '~$' | fzf --read0 -0 -1)"

  if [[ -n $file ]]
  then
     if [[ -d $file ]]
     then
        cd -- $file
     else
        cd -- ${file:h}
     fi
  fi
}

# g - use terminal as a launcher
g() {
  xdg-open $1 & exit
}

# fasd integration
eval "$(fasd --init auto)"
